package com.ljl.test;

import lombok.NonNull;

import java.util.Arrays;
import java.util.HashSet;
import java.util.Set;
import java.util.function.Function;

/**
 * @author liujialei
 */
public class FunctionTest {

    public static void main(String[] args) {

        String str_771 = "91648,92928,85249,85505,88577,92417,87042,89858,91650,92418,88579,89603,91651,85252,86532,90628,91652,96516,85509,86533,89349,96517,87558,87814,95238,90631,91655,92167,92935,96519,84744,90632,91656,92936,93960,96520,84745,89353,92937,83722,86026,86538,87306,92426,94730,96266,88587,95243,96267,87308,90124,95244,97036,91661,92941,96525,84750,94734,89359,89871,91663,92687,94735,97295,85520,90896,92432,95248,83217,88593,89361,90385,95505,87314,95506,84755,85267,87315,90643,83476,84756,89364,91668,96020,83733,85269,85525,91669,91926,95510,83736,83992,88600,87833,88089,88601,88857,86554,91674,92186,95259,82204,90396,90652,93212,95516,90397,92701,93213,89374,90910,93214,85279,89119,92703,93215,93727,83744,87072,90400,92960,96288,85537,87073,90145,92449,94497,84258,88098,91683,93731,93732,84517,92197,93733,84006,90150,93734,96294,83495,88615,91687,87080,92456,84777,96809,86570,93738,97066,88619,89899,96043,89388,95788,83757,84781,89389,93997,95789,86318,92207,92719,87600,92720,82225,88625,91697,96305,81970,87602,88626,92210,82739,83251,85555,86579,88627,94259,82740,86580,86581,86837,90421,89142,89910,90422,93238,97078,94007,85560,88632,87865,92729,94009,86074,90682,94010,82491,83259,89403,94011,94267,86332,94781,92990,94270,86079,86847,88639,89407,92735,92991,94271,83008,92224,92736,94272,95808,95809,87874,90178,92994,85571,88643,92227,92739,97091,85060,87877,83782,84038,84806,90182,97095,93768,97096,85577,91721,95561,88650,92746,88651,94795,95307,85068,93772,94284,83021,86349,93773,84046,85582,83791,87120,87121,97361,84562,89426,92242,84307,87379,94803,92500,89429,92501,95829,96597,93014,87639,83800,84312,93272,84825,91737,92505,93273,87130,89434,90714,91738,92506,94810,96602,92251,96603,84572,84829,85597,87133,89949,84830,96351,92512,93024,96352,90209,95841,87138,90210,93026,84835,90467,91491,92771,83044,94308,84837,91749,88422,85607,90471,93031,95847,84840,90472,93288,93800,83561,91753,92265,93033,93289,89706,92266,93034,97130,84843,85611,92779,96875,84332,85612,94828,86381,86637,82542,84334,85102,84591,87663,87919,92783,87152,95600,93041,84082,87666,83059,90995,95347,83060,90996,84597,86389,97397,84854,86646,89462,84599,84855,88439,89463,90999,96375,83064,83320,89464,95608,82041,83577,87417,85882,93562,86395,84860,90492,92028,95869,87678,91774,97150,86656,88192,91264,95616,84097,89729,93569,95361,86146,87682,87683,89475,90755,92803,93315,95619,83076,83332,84612,89476,87173,90245,94853,84102,88454,94854,83591,85127,89479,90247,94855,94856,91785,97417,83082,91530,94858,97418,83851,86411,91531,97163,86924,94860,82061,84621,86925,92813,97421,84110,84622,87182,92302,94606,87695,94863,90768,96400,96912,83089,90001,94865,82578,84370,87186,93074,83859,87187,84628,94612,85141,94613,84630,86422,97431,82328,92312,96664,82329,82585,84121,84889,85401,87705,91545,91801,82586,87706,94874,87197,91293,92061,82590,85663,88735,95647,95903,82592,84640,84896,88992,94113,83106,90786,93346,85923,86179,84644,84389,94885,96165,82086,82598,83366,92326,88487,97447,87720,88488,82601,83881,87721,86187,86699,90539,97451,83372,86444,90540,96428,97452,84909,90285,92589,93613,95917,96429,90542,95918,96430,96686,82351,94895,96431,82609,88753,95665,96945,94644,94645,96437,91574,92086,94646,96438,82615,83127,92087,96951,92088,96184,96952,97208,90553,94137,86970,96698,85435,86459,96443,93628,94652,89790,92094,97214,92095,92863,94912,93121,92866,93634,83907,86467,92867,85956,89284,90308,88261,90309,91845,96965,83142,84422,84934,92358,83399,83911,90055,91591,94407,94663,96455,89544,94408,89801,92873,84682,86986,96714,82635,84171,83916,86476,88524,89548,92108,82637,86477,88269,82638,89550,92878,82639,92623,93135,93903,82640,84688,85200,92112,86481,86993,87249,88273,90321,97489,86482,93650,82643,89043,82388,84436,85716,96980,82389,83669,84693,85717,96469,84694,87254,97238,90839,96471,97239,93912,96728,83673,84185,91609,83674,84186,97242,83931,86235,89051,90331,97243,82396,88540,89052,91612,97244,97500,84445,88285,92125,96989,97245,84446,91614,96990,84703,87263,88543,87520,94944,95968,84193,87009,87010,83939,84195,85475,90595,96483,83428,83684,83940,85476,85477,88549,92645,94693,85478,89830,92646,94694,83175,83943,87527,89575,92647,83176,86504,83945,97001,85482,87786,89066,89578,90858,88811,89579,91627,92395,97515,83180,91628,97260,90349,92141,94701,97261,83694,84719,93935,95471,88560,89584,88305,94449,95729,96498,86259,87027,93171,83956,92660,97012,83701,86517,87029,93429,94966,95734,82423,83447,95735,82936,88312,88568,89592,96504,83961,87033,91641,86522,93690,94458,94714,94971,82172,84220,85500,91644,94972,83709,94973,95741,83710,91646,94974,96510,86527,91647,94719,94975,96511,97023";
        String str_773 = "84703,85435,85663,86146,86522,86837,87720,88587,88857,89349,89550,90539,91753,92167,82423,92878,93634,94734,94912,95361,95741,97096,97431,83859,84046,84370,84591,84843,85200,85525,86637,86993,87187,89462,90178,90385,91530,82351,83127,82598,93014,93215,93935,94663,95248,95968,96375,96980,97243,83744,83956,91628,92141,82739,83669,92426,92623,93041,94010,94694,94856,95665,96437,97078,97397,84572,84835,85478,85923,86581,87865,89426,89579,90055,90652,91661,82225,91926,82585,92266,92505,92739,92994,93773,94284,94974,95510,95903,96517,96952,83709,83943,84682,84896,85279,85607,86476,87042,87682,88560,88753,90285,90467,84312,84756,85476,85882,86259,86538,87138,87814,89043,89578,90595,91656,82086,83064,91845,83366,92703,92937,93733,94270,94613,94966,95829,96498,96875,97163,97489,83907,84628,85577,86444,87010,87254,88540,90896,83175,92094,82638,83577,93289,94007,94863,95600,96400,96664,97012,97261,83961,84258,85716,86179,86532,87721,88305,88593,89910,90321,90540,91651,83332,92197,92456,92660,93135,93650,94606,94735,96443,84082,84597,84854,86026,86395,86646,87558,87919,88650,89463,90182,90397,90755,91491,92358,93214,96989,97244,89830,90471,91264,91641,91737,83251,82740,83674,92873,93074,93562,94113,94408,94701,94860,95729,96431,97066,83851,84829,85482,86318,87874,88619,89429,90124,90682,91674,82586,83428,92302,92746,94308,95238,95516,95917,96525,83710,84193,84446,84688,84909,85269,85611,86482,87072,87678,88261,88579,89353,83791,84332,84777,85477,86570,86925,87130,88632,89603,90001,90628,83076,82542,92735,92941,93734,94267,94644,94803,94971,95471,95841,96267,96510,97500,84110,84445,84622,85249,85571,86467,87029,87308,87639,88192,89479,89801,90910,91609,83176,92095,82640,93315,94009,94874,95616,96428,96698,97036,84744,85068,85717,86187,86533,87379,88312,89361,89949,90331,91647,91774,92207,92418,92687,93690,94781,95788,96455,97447,84389,84599,84855,85537,86389,86656,87009,87197,88089,88487,88651,89464,89729,90209,90400,90768,91531,83142,92061,82609,83495,93026,93238,93960,94449,94853,95259,96602,97245,88269,89359,89858,90472,91650,91738,83259,92645,82936,83684,93569,94137,94714,94885,96165,96438,97091,97417,84830,85509,85956,87186,88422,88639,89434,90145,90714,91683,82590,83447,92512,92783,92990,93800,94407,94646,94828,95243,96519,96965,97238,83722,83940,84186,84693,87073,87315,87683,96714,97295,83800,83992,84334,84781,85102,86579,87833,89051,89389,89592,90631,91668,82172,83082,92251,92500,92720,93738,94271,94810,94975,96288,96504,96912,97515,83916,84121,84422,84630,84889,85252,86459,87663,88543,89790,90245,90995,91627,82396,92108,82643,92417,92866,93034,93346,95347,95608,83757,84307,84745,85060,86527,87120,88615,89374,91655,81970,83044,91785,82491,83320,92210,92701,92928,93727,94612,94795,95808,96469,96809,97130,97451,84612,86074,86381,87263,88098,88488,89142,89475,90210,90421,91545,92086,82615,92803,93031,93272,94458,94854,95307,96020,96603,96990,97239,86847,87080,87695,88273,88568,88811,89364,89548,89871,90308,90492,91644,91749,92432,92646,83008,93613,94719,94895,95734,96728,97418,84562,84837,85520,86349,87173,87520,87877,88439,88627,90150,90858,91687,82328,82592,83476,92312,92506,92771,92991,93212,93903,95244,95918,96351,96945,83733,83939,84195,84694,84934,85612,86477,94865,95619,96429,96686,84806,85127,85505,86580,88625,89066,89403,89584,90632,91663,82204,83106,82578,92242,92729,92960,93768,94645,94972,95505,95869,96294,96511,97208,97519,83694,84185,84640,85267,85597,86481,87314,87666,88549,90247,90996,91612,91721,83217,92125,82639,92395,92589,92867,94011,83782,84750,86235,86517,86924,87121,87417,87786,88601,88992,89388,89575,90349,90542,91652,82041,83059,91801,83372,92224,92647,92935,93731,94259,94944,95809,96471,84097,84860,85560,86079,86411,87600,88524,89476,90422,90786,91574,82388,92087,82637,83591,92813,93024,93273,94855,96597,97001,85401,86504,87706,88285,88600,89544,89899,90309,91293,91646,92186,92449,83021,93121,93628,94730,95735,96184,97095,97421,83881,84038,84840,86986,87182,87527,88454,88643,89119,89706,90396,91697,82329,92028,82601,92326,92779,93213,93912,96352,96520,97242,83736,83945,84220,84719,92863,93429,94497,94693,94858,95647,96430,97361,84006,84825,85141,85500,86332,86970,87152,88626,89052,89407,90643,91669,83089,83399,92265,92501,92736,93171,93772,94272,94652,94973,95506,95847,96305,96516,96951,97214,97523,83701,83931,84171,84436,84644,85582,87033,87306,87705,88577,88735,89284,90999,91614,92112,83673,84517,84755,85475,86554,87133,90553,91648,82061,83060,92227,92719,92936,93732,95789,96266,96483,97150,97452,83911,84102,84621,85555,86422,86699,87027,87249,87602,90839,91591,82389,83180,92088,82635,83561,93033,93288,93997,95561,96043,97023,97260";
        Set<String> set_771 = new HashSet<>();
        Set<String> set_773 = new HashSet<>();
        Arrays.stream(str_771.split(",")).forEach(set_771::add);
        Arrays.stream(str_773.split(",")).forEach(set_773::add);
        set_773.removeAll(set_771);
        System.out.println(set_773);

    }


    private void test(@NonNull String abc) {
        System.out.println(abc.length());
    }

    /**
     * 这样可以做到处理的后置，一直到调用的时候才知道具体的处理逻辑，也就是说具体的处理方式直到调用的时候才知道，我们需要将具体的处理方式当作参数传入
     * 这样就可以只是定义请求的入参和出参，具体的处理逻辑，我这边只是直到一个入参，也就是说你给我一个根据这个入餐，调用的时候决定入餐的处理逻辑，
     * 重新说下，就是我这边有一个入参，需要对这个入参做一定的处理，但是我现在不能确定处理的逻辑，需要调用方确定，所以这个处理的逻辑就可以当作一个参数进行传入，
     *
     * @param function
     * @return
     */
    public String addTen(Function<Integer, String> function) {
        return function.apply(10);
    }


    private String myCal1(Integer integer) {
        return integer + " myCal 1 !";
    }


    private String myCal2(Integer integer) {
        return integer + " myCal 2 !";
    }


    private String myCal3(Integer integer) {
        return integer + " myCal 3 !";
    }

}
